This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-11-10T16:53:18.970Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
public/
  _redirects
  chili-white.svg
  chili.svg
  robots.txt
  site.webmanifest
src/
  assets/
    open-new.svg
  components/
    ui/
      accordion.tsx
      button.tsx
      card.tsx
      carousel.tsx
    Accordion.jsx
    Analytics.astro
    Announcement.jsx
    Calendar.jsx
    CalendarHero.jsx
    Card.jsx
    Embed.astro
    Footer.jsx
    FooterPhotoPanel.jsx
    Form.jsx
    FormHorizontal.jsx
    HeroMain.jsx
    ImageGallery.jsx
    Leaderboard.jsx
    Nav.astro
    OrderDropdown.jsx
    PostCard.astro
    RestaurantSchema.jsx
    Testimonials.jsx
    TopNav.jsx
  content/
    posts/
      tolberts-restaurant-chili-parlor-history.md
    config.ts
  layouts/
    Layout.astro
    MarkdownPostLayout.astro
  lib/
    seo/
      schemas.ts
    wordpress/
      api.ts
      fetchEvents.ts
    utils.ts
  pages/
    api/
      contact-form-api.json.js
    posts/
      [...slug].astro
      index.astro
    404.astro
    about.astro
    calendar.astro
    index.astro
  styles/
    globals.css
    topnav.module.css
  env.d.ts
.gitignore
.nvmrc
.prettierrc
astro.config.mjs
components.json
package.json
README.md
tailwind.config.mjs
tsconfig.json

================================================================
Repository Files
================================================================

================
File: public/_redirects
================
# Redirects from what the browser requests to what we serve

/home /
/live-music/* /calendar 301!
/contact-2-2-2/ /
/gallery-2/ /about
/documents/TolbertsMenu.pdf https://tolbertscms.com/wp-content/uploads/2024/04/TolbertsNewMenu010324.pdf
/wp-content/uploads/2024/01/TolbertsNewMenu010324.pdf https://tolbertscms.com/wp-content/uploads/2024/04/TolbertsNewMenu010324.pdf
/business_opportunity/ /
/documents/Tolberts-Menu-2022-2-19.pdf https://tolbertscms.com/wp-content/uploads/2024/04/TolbertsNewMenu010324.pdf
/wp-content/uploads/2023/04/Brunch-Menu-Current-April-2023.pdf https://tolbertscms.com/wp-content/uploads/2024/04/Brunch-Menu-Current-April-2023.pdf
/store/ /
/50-years-of-chili/ /posts/tolberts-restaurant-chili-parlor-history/
/wp-content/uploads/2023/11/TolbertsHolidayMenuFINAL11302023.pdf https://tolbertscms.com/wp-content/uploads/2024/04/TolbertsNewMenu010324.pdf
/wp-content/uploads/2022/05/Main-Street-Fest-2022.pdf /

================
File: public/chili-white.svg
================
<?xml version="1.0" encoding="UTF-8"?><svg id="Capa_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 628.29 681.61"><defs><style>.cls-1{stroke-width:0px;}</style></defs><path fill="#f5f5f5" class="cls-1" d="m215.88,141.66c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#f5f5f5" class="cls-1" d="m202.8,183.43l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/><path fill="#f5f5f5" class="cls-1" d="m619.88,44.11c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#f5f5f5" class="cls-1" d="m606.8,85.88l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/><path fill="#f5f5f5" class="cls-1" d="m221.27,505.11c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#f5f5f5" class="cls-1" d="m208.19,546.88l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/><path fill="#f5f5f5" class="cls-1" d="m625.27,407.56c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#f5f5f5" class="cls-1" d="m612.19,449.33l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/></svg>

================
File: public/chili.svg
================
<?xml version="1.0" encoding="UTF-8"?><svg id="Capa_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 628.29 681.61"><defs><style>.cls-1{stroke-width:0px;}</style></defs><path fill="#0b0b0b" class="cls-1" d="m215.88,141.66c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#0b0b0b" class="cls-1" d="m202.8,183.43l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/><path fill="#0b0b0b" class="cls-1" d="m619.88,44.11c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#0b0b0b" class="cls-1" d="m606.8,85.88l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/><path fill="#0b0b0b" class="cls-1" d="m221.27,505.11c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#0b0b0b" class="cls-1" d="m208.19,546.88l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/><path fill="#0b0b0b" class="cls-1" d="m625.27,407.56c-3.29-7.16-9.07-11.94-17.2-14.22-.35-.16-1.01-.43-1.79-.73,4.39-5.94,6.3-12.24,5.09-17.5-.83-3.61-3.49-8.52-11.38-11.4-2.25-.82-4.75.33-5.57,2.59-.82,2.26.33,4.75,2.59,5.57,3.41,1.25,5.4,2.99,5.91,5.2.76,3.31-1.45,8.29-5.63,12.84-3.35-.73-7.23-1.28-11.33-1.28-10.92,0-28.96,4.26-36.18,30.19l3.2-.15c15.22-1.16,22.41-4.05,24.03-6.36l2.96-4.25,3.66,3.67c.37.37,7.54,7.7,6.91,18.81,3.9-1.65,8.06-4.84,7.41-10.94l-1.17-10.91,8.32,7.15c.46.4,9.79,8.59,10.62,22.13,1.14-.75,2.34-1.65,3.55-2.72l.42-.33,8.33-5.78c.71-7.57.2-15.2-2.73-21.59Z"/><path fill="#0b0b0b" class="cls-1" d="m612.19,449.33l-6.83,2.07,1.31-7.02c1.14-6.1-.23-11.17-2.08-14.9-4.14,7.48-13.41,10.67-19.2,11.33l-6.96.8,2.38-6.58c2.14-5.92.62-10.8-.99-13.82-3.96,2.38-11.48,5.01-26.32,6.14l-5.6.26c-.07.47-.17.88-.24,1.36-.59,2.02-1.16,4.16-1.71,6.58-14.7,64.74-68.45,99.11-131.93,134.27-3.39,1.88-5.31,6.17-4.38,9.76.71,2.74,2.95,4.51,5.71,4.51l.98-.07c5.39-.82,12.01-1.33,19.67-1.93,47.62-3.72,136.26-10.63,181.95-117.73.37-.77,5.1-10.83,8.04-23.22l-1.15.79c-6.15,5.42-12.37,7.33-12.64,7.42Zm-134.08,113.55c-.44.14-.89.21-1.33.21-1.84,0-3.54-1.17-4.13-3.01-.73-2.28.52-4.73,2.8-5.46,93.99-30.29,104.36-94.59,104.46-95.23.34-2.37,2.55-4.07,4.92-3.67,2.37.34,4.01,2.54,3.67,4.92-.41,2.85-11.29,70.31-110.38,102.25Z"/></svg>

================
File: public/robots.txt
================
User-agent: *
Disallow:
Sitemap: https://tolbertsrestaurant.com/sitemap-index.xml

================
File: public/site.webmanifest
================
{
  "name": " Tolbert's Restaurant",
  "short_name": "Tolbert's Restaurant",
  "icons": [
    {
      "src": "/android-chrome-192x192.png",
      "sizes": "192x192",
      "type": "image/png"
    },
    {
      "src": "/android-chrome-512x512.png",
      "sizes": "512x512",
      "type": "image/png"
    }
  ],
  "theme_color": "#e7e5e4",
  "background_color": "#ffffff",
  "display": "standalone",
  "start_url": "https://tolebrtsrestaurant.com",
  "description": "The tradition continues as Tolbert’s Restaurant & Chili Parlor features classic southwestern cuisine with our signature Bowl of Red, using the same recipe developed by Frank X. Tolbert and his son."
}

================
File: src/assets/open-new.svg
================
<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 20 20" width="20px" height=20px"><path d="M 25.980469 2.9902344 A 1.0001 1.0001 0 0 0 25.869141 3 L 20 3 A 1.0001 1.0001 0 1 0 20 5 L 23.585938 5 L 13.292969 15.292969 A 1.0001 1.0001 0 1 0 14.707031 16.707031 L 25 6.4140625 L 25 10 A 1.0001 1.0001 0 1 0 27 10 L 27 4.1269531 A 1.0001 1.0001 0 0 0 25.980469 2.9902344 z M 6 7 C 4.9069372 7 4 7.9069372 4 9 L 4 24 C 4 25.093063 4.9069372 26 6 26 L 21 26 C 22.093063 26 23 25.093063 23 24 L 23 14 L 23 11.421875 L 21 13.421875 L 21 16 L 21 24 L 6 24 L 6 9 L 14 9 L 16 9 L 16.578125 9 L 18.578125 7 L 16 7 L 14 7 L 6 7 z"/></svg>

================
File: src/components/ui/accordion.tsx
================
import * as React from "react";
import * as AccordionPrimitive from "@radix-ui/react-accordion";
import { ChevronDownIcon } from "@radix-ui/react-icons";

import { cn } from "@/lib/utils";

const Accordion = AccordionPrimitive.Root;

const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
>(({ className, ...props }, ref) => (
  <AccordionPrimitive.Item
    ref={ref}
    className={cn("border-b", className)}
    {...props}
  />
));
AccordionItem.displayName = "AccordionItem";

const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Header className="flex">
    <AccordionPrimitive.Trigger
      ref={ref}
      className={cn(
        "flex flex-1 items-center justify-between py-4	text-left text-lg font-medium  transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
        className,
      )}
      {...props}
    >
      {children}
      <ChevronDownIcon className="h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200" />
    </AccordionPrimitive.Trigger>
  </AccordionPrimitive.Header>
));
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;

const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn("pb-4 pt-0", className)}>{children}</div>
  </AccordionPrimitive.Content>
));
AccordionContent.displayName = AccordionPrimitive.Content.displayName;

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent };

================
File: src/components/ui/button.tsx
================
import * as React from "react";
import { Slot } from "@radix-ui/react-slot";
import { cva, type VariantProps } from "class-variance-authority";

import { cn } from "../../lib/utils";

const buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded-full text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-transparent bg-background shadow-sm hover:bg-accent hover:text-accent-foreground text-white hover:bg-white/90",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean;
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button";
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    );
  },
);
Button.displayName = "Button";

export { Button, buttonVariants };

================
File: src/components/ui/card.tsx
================
import * as React from "react";

import { cn } from "@/lib/utils";

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className,
    )}
    {...props}
  />
));
Card.displayName = "Card";

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
));
CardHeader.displayName = "CardHeader";

const CardTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h3
    ref={ref}
    className={cn("font-semibold leading-none tracking-tight", className)}
    {...props}
  />
));
CardTitle.displayName = "CardTitle";

const CardDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <p
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
CardDescription.displayName = "CardDescription";

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
));
CardContent.displayName = "CardContent";

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
));
CardFooter.displayName = "CardFooter";

export {
  Card,
  CardHeader,
  CardFooter,
  CardTitle,
  CardDescription,
  CardContent,
};

================
File: src/components/ui/carousel.tsx
================
import * as React from "react";
import { ArrowLeftIcon, ArrowRightIcon } from "@radix-ui/react-icons";
import useEmblaCarousel, {
  type UseEmblaCarouselType,
} from "embla-carousel-react";

import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";

type CarouselApi = UseEmblaCarouselType[1];
type UseCarouselParameters = Parameters<typeof useEmblaCarousel>;
type CarouselOptions = UseCarouselParameters[0];
type CarouselPlugin = UseCarouselParameters[1];

type CarouselProps = {
  opts?: CarouselOptions;
  plugins?: CarouselPlugin;
  orientation?: "horizontal" | "vertical";
  setApi?: (api: CarouselApi) => void;
};

type CarouselContextProps = {
  carouselRef: ReturnType<typeof useEmblaCarousel>[0];
  api: ReturnType<typeof useEmblaCarousel>[1];
  scrollPrev: () => void;
  scrollNext: () => void;
  canScrollPrev: boolean;
  canScrollNext: boolean;
} & CarouselProps;

const CarouselContext = React.createContext<CarouselContextProps | null>(null);

function useCarousel() {
  const context = React.useContext(CarouselContext);

  if (!context) {
    throw new Error("useCarousel must be used within a <Carousel />");
  }

  return context;
}

const Carousel = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & CarouselProps
>(
  (
    {
      orientation = "horizontal",
      opts,
      setApi,
      plugins,
      className,
      children,
      ...props
    },
    ref,
  ) => {
    const [carouselRef, api] = useEmblaCarousel(
      {
        ...opts,
        axis: orientation === "horizontal" ? "x" : "y",
      },
      plugins,
    );
    const [canScrollPrev, setCanScrollPrev] = React.useState(false);
    const [canScrollNext, setCanScrollNext] = React.useState(false);

    const onSelect = React.useCallback((api: CarouselApi) => {
      if (!api) {
        return;
      }

      setCanScrollPrev(api.canScrollPrev());
      setCanScrollNext(api.canScrollNext());
    }, []);

    const scrollPrev = React.useCallback(() => {
      api?.scrollPrev();
    }, [api]);

    const scrollNext = React.useCallback(() => {
      api?.scrollNext();
    }, [api]);

    const handleKeyDown = React.useCallback(
      (event: React.KeyboardEvent<HTMLDivElement>) => {
        if (event.key === "ArrowLeft") {
          event.preventDefault();
          scrollPrev();
        } else if (event.key === "ArrowRight") {
          event.preventDefault();
          scrollNext();
        }
      },
      [scrollPrev, scrollNext],
    );

    React.useEffect(() => {
      if (!api || !setApi) {
        return;
      }

      setApi(api);
    }, [api, setApi]);

    React.useEffect(() => {
      if (!api) {
        return;
      }

      onSelect(api);
      api.on("reInit", onSelect);
      api.on("select", onSelect);

      return () => {
        api?.off("select", onSelect);
      };
    }, [api, onSelect]);

    return (
      <CarouselContext.Provider
        value={{
          carouselRef,
          api: api,
          opts,
          orientation:
            orientation || (opts?.axis === "y" ? "vertical" : "horizontal"),
          scrollPrev,
          scrollNext,
          canScrollPrev,
          canScrollNext,
        }}
      >
        <div
          ref={ref}
          onKeyDownCapture={handleKeyDown}
          className={cn("relative", className)}
          role="region"
          aria-roledescription="carousel"
          {...props}
        >
          {children}
        </div>
      </CarouselContext.Provider>
    );
  },
);
Carousel.displayName = "Carousel";

const CarouselContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { carouselRef, orientation } = useCarousel();

  return (
    <div ref={carouselRef} className="overflow-hidden">
      <div
        ref={ref}
        className={cn(
          "flex",
          orientation === "horizontal" ? "-ml-4" : "-mt-4 flex-col",
          className,
        )}
        {...props}
      />
    </div>
  );
});
CarouselContent.displayName = "CarouselContent";

const CarouselItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { orientation } = useCarousel();

  return (
    <div
      ref={ref}
      role="group"
      aria-roledescription="slide"
      className={cn(
        "min-w-0 shrink-0 grow-0 basis-full",
        orientation === "horizontal" ? "pl-4" : "pt-4",
        className,
      )}
      {...props}
    />
  );
});
CarouselItem.displayName = "CarouselItem";

const CarouselPrevious = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollPrev, canScrollPrev } = useCarousel();

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        "  h-8 w-8 rounded-full",
        orientation === "horizontal" ? "" : "rotate-90",
        className,
      )}
      disabled={!canScrollPrev}
      onClick={scrollPrev}
      {...props}
    >
      <ArrowLeftIcon className="h-4 w-4 text-stone-900" />
      <span className="sr-only">Previous slide</span>
    </Button>
  );
});
CarouselPrevious.displayName = "CarouselPrevious";

const CarouselNext = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollNext, canScrollNext } = useCarousel();

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        " h-8 w-8 rounded-full",
        orientation === "horizontal" ? "" : " rotate-90",
        className,
      )}
      disabled={!canScrollNext}
      onClick={scrollNext}
      {...props}
    >
      <ArrowRightIcon className="h-4 w-4 text-stone-900" />
      <span className="sr-only">Next slide</span>
    </Button>
  );
});
CarouselNext.displayName = "CarouselNext";

export {
  type CarouselApi,
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselPrevious,
  CarouselNext,
};

================
File: src/components/Accordion.jsx
================
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";

export function AccordionDemo() {
  return (
    <Accordion type="single" collapsible className="w-full">
      <AccordionItem value="item-1">
        <AccordionTrigger>
          What is the history behind Tolbert's Chili Parlor?
        </AccordionTrigger>
        <AccordionContent>
          Tolbert's Chili Parlor was founded by Frank X. Tolbert in 1976 in
          Dallas, originally. Frank X. Tolbert is known as "The Grandfather of
          Chili" and co-founded the Terlingua Chili Cookoff in 1967. The
          restaurant is now located in a historic building from 1911 in downtown
          Grapevine, Texas.
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-2">
        <AccordionTrigger>
          What is unique about the Terlingua burger at Tolbert's?
        </AccordionTrigger>
        <AccordionContent>
          The Terlingua burger at Tolbert's features the famous Terlingua chili.
          It is served on a grilled brioche bun with cheese, diced onions, and
          seasoned with Terlingua chili salt. The beef patty receives an
          abundance of flame, making the burger notably juicy and flavorful.
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-3">
        <AccordionTrigger>
          Is Tolbert's Chili Parlor suitable for children?
        </AccordionTrigger>
        <AccordionContent>
          Yes, Tolbert's Chili Parlor is family-friendly and suitable for
          children. The menu offers a variety of options that cater to all age
          groups, ensuring a pleasant dining experience for families.
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-4">
        <AccordionTrigger>
          Does Tolbert's Chili Parlor have vegetarian options?
        </AccordionTrigger>
        <AccordionContent>
          While Tolbert's Chili Parlor is famous for its chili and burgers, they
          do offer a selection of vegetarian options. Please check their current
          menu or ask the staff for vegetarian dishes available during your
          visit.
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-5">
        <AccordionTrigger>
          Can you dine at Tolbert's Chili Parlor without a reservation?
        </AccordionTrigger>
        <AccordionContent>
          Yes, Tolbert's Chili Parlor generally welcomes walk-ins. However,
          during busy times or for large groups, it's advisable to make a
          reservation to ensure seating is available.
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-6">
        <AccordionTrigger>
          What are the operating hours of Tolbert's Chili Parlor?
        </AccordionTrigger>
        <AccordionContent>
          Open daily at 11:00am. Closing times may vary so please call first to
          verify. Enjoy Happy Hour Monday thru Friday!
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-7">
        <AccordionTrigger>
          Is there parking available at Tolbert's Chili Parlor?
        </AccordionTrigger>
        <AccordionContent>
          Yes, there is parking available near Tolbert's Chili Parlor. There are
          street parking options and public parking lots in downtown Grapevine,
          which are convenient for visitors.
        </AccordionContent>
      </AccordionItem>
    </Accordion>
  );
}

================
File: src/components/Analytics.astro
================
---
// Analytics.astro
// Define any props or imports you need
---

<script>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());
  gtag("config", "G-X0GP8G25YE");
</script>
<script async src="https://www.googletagmanager.com/gtag/js?id=G-X0GP8G25YE"
></script>

================
File: src/components/Announcement.jsx
================
import React, { useState, useEffect } from "react";

export default function Announcement() {
  const [isVisible, setIsVisible] = useState(true);
  const [hasCheckedStorage, setHasCheckedStorage] = useState(false);

  useEffect(() => {
    if (typeof window !== "undefined" && window.sessionStorage) {
      const storedValue = sessionStorage.getItem("bannerVisible");
      if (storedValue !== null) {
        setIsVisible(storedValue === "true");
      }
      setHasCheckedStorage(true);
    }
  }, []);

  useEffect(() => {
    if (hasCheckedStorage) {
      sessionStorage.setItem("bannerVisible", isVisible.toString());
    }
  }, [isVisible, hasCheckedStorage]);

  const handleClose = () => {
    setIsVisible(false);
  };

  if (!isVisible) return null;

  return (
    <div className="relative border-l-4 border-teal-900 bg-teal-600 px-4 py-4 text-stone-100">
      <div className="relative mx-auto max-w-5xl">
        <button
          onClick={handleClose}
          className="pointer-events-auto absolute right-2 z-10 text-stone-100 hover:text-stone-300"
          aria-label="Close"
        >
          &times;
        </button>
        <p className="text-lg font-bold lg:text-xl">Notice</p>
        <p>
          Grapefest Festival in Progress now through Sunday, September 15. Very
          limited parking starts immediately and pay to enter the Festival to
          get to Tolbert’s starts Friday at 5:00 PM. Shuttle service is
          available. Go to the Grapefest website for details. We will be back to
          regular business on Monday, September 16.
        </p>
      </div>
    </div>
  );
}

================
File: src/components/Calendar.jsx
================
import { useState } from "react";

import { Button } from "./ui/button";

const Calendar = ({ events }) => {
  const [showDescription, setShowDescription] = useState(false);

  return (
    <div className="grid grid-cols-1 gap-4 p-4 md:grid-cols-2 lg:grid-cols-3">
      {events &&
        [...events].reverse().map((event, index) => {
          const {
            node: {
              id,
              postTypeEvent: {
                image: { sourceUrl } = {},
                primaryHeader,
                secondaryHeader,
                description,
                date,
                startTime,
                endTime,
              } = {},
            } = {},
          } = event;
          const [showDescription, setShowDescription] = useState(false); 

          return (
            <div
              key={id}
              className=" flex h-96 flex-1 items-end overflow-hidden rounded-lg bg-cover bg-center shadow-lg

              "
              style={{ backgroundImage: `url(${sourceUrl})` }}
            >
              <div className="flex w-full	 flex-row items-center justify-between rounded-t-lg border-l border-t bg-slate-800/50 p-4 backdrop-blur-md">
                <div>
                  <h2 className="noto text-xl text-white sm:text-3xl">
                    {primaryHeader}
                  </h2>
                  <h3 className="sm:text-md mt-1 text-sm text-white">
                    {secondaryHeader}
                  </h3>
                  <p className="sm:text-md mt-1 text-sm text-white">
                    🗓️ {date}
                  </p>
                  <p className="sm:text-md mt-1 text-sm text-white">
          ⏰ {startTime} - {endTime}
        </p>
                  {showDescription && (
                    <p className="mt-1 pr-5 text-sm text-white">
                      {description}
                    </p>
                  )}
                </div>
                {/* <Button
                  variant="secondary"
                  className="mt-2"
                  onClick={() => setShowDescription(!showDescription)}
                >
                  {showDescription ? "Hide details" : "Show details"}
                </Button> */}
              </div>
            </div>
          );
        })}
    </div>
  );
};

export default Calendar;

================
File: src/components/CalendarHero.jsx
================
import { useState } from "react";

const Hero = ({ events }) => {
  const [showDescription, setShowDescription] = useState(false);

  const {
    node: {
      postTypeEvent: {
        image: { sourceUrl } = {},
        primaryHeader,
        secondaryHeader,
        description,
        date,
        startTime,
        endTime,
      } = {},
    } = {},
  } = events[events.length - 1];

  return (
    <div className="grid h-[1200px] grid-cols-1 sm:h-[90dvh] lg:grid-cols-3">
      <div
        className="flex items-end justify-end bg-cover bg-center md:col-span-2"
        style={{
          backgroundImage: `url(${sourceUrl})`,
        }}
      >
        <div
          className=" w-3/4 overflow-hidden rounded-tl-lg border-l border-t bg-slate-800/50 p-4 shadow-lg backdrop-blur-md

"
        >
          <h2 className="noto line-clamp-1 text-xl text-white sm:text-3xl">
            {primaryHeader}
          </h2>
          <h3 className="sm:text-md mt-1text-sm text-white">
            {secondaryHeader}
          </h3>
          <p className="sm:text-md mt-1text-sm text-white">🗓️ {date}</p>
          <p className="sm:text-md mt-1 text-sm text-white">
            ⏰ {startTime} - {endTime}
          </p>
          {showDescription && (
            <p className="mt-1 text-sm text-white"> {description}</p>
          )}
        </div>
      </div>
      <div className="flex flex-col lg:col-span-1">
        {[events[events.length - 2], events[events.length - 3]]
          .filter(Boolean)
          .map((event, _) => {
            const {
              node: {
                id,
                postTypeEvent: {
                  image: { sourceUrl } = {},
                  primaryHeader,
                  secondaryHeader,
                  description,
                  date,
                  startTime,
                  endTime,
                } = {},
              } = {},
            } = event;
            const [showDescription, setShowDescription] = useState(false);

            return (
              <div
                key={id}
                className="flex min-h-[300px] flex-1 items-end justify-end overflow-hidden bg-cover bg-center bg-no-repeat shadow-lg

              "
                style={{ backgroundImage: `url(${sourceUrl})` }}
              >
                <div className=" w-3/4 rounded-tl-lg border-l border-t bg-slate-800/50 p-4 backdrop-blur-md">
                  <h2 className="noto text-xl text-white sm:text-3xl">
                    {primaryHeader}
                  </h2>
                  <h3 className="sm:text-md mt-1 text-sm text-white">
                    {secondaryHeader}
                  </h3>
                  <p className="sm:text-md mt-1 text-sm text-white">
                    🗓️ {date}
                  </p>{" "}
                  <p className="sm:text-md mt-1 text-sm text-white">
                    ⏰ {startTime} - {endTime}
                  </p>
                  {showDescription && (
                    <p className="mt-1 text-sm text-white">{description}</p>
                  )}
                  {/* <Button
                    variant="outline"
                    className="color-white mt-2 bg-transparent"
                    onClick={() => setShowDescription(!showDescription)}
                  >
                    {showDescription ? "Hide Details" : "Show Details"}{" "}
                    <ChevronRight className="h-4 w-4" />
                  </Button> */}
                </div>
              </div>
            );
          })}
      </div>
    </div>
  );
};

export default Hero;

================
File: src/components/Card.jsx
================
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";

export default function CardComponent({ title, description }) {
  return (
    <Card className="w-1/4">
      <CardHeader>
        <CardTitle>Card Title</CardTitle>
        <CardDescription>Card Description</CardDescription>
      </CardHeader>
      <CardContent>
        <p>Card Content</p>
      </CardContent>
      <CardFooter>
        <p>Card Footer</p>
      </CardFooter>
    </Card>
  );
}

================
File: src/components/Embed.astro
================
---
import { Tweet, Vimeo, YouTube } from 'astro-embed';
---

<Tweet id="https://twitter.com/astrodotbuild/status/1512144306898976768" />

<Vimeo id="https://vimeo.com/32001208" />

<YouTube id="https://youtu.be/xtTy5nKay_Y" />

================
File: src/components/Footer.jsx
================
import { Button } from "./ui/button";
import RestaurantSchema from "./RestaurantSchema";
import Form from "./Form";

export default function Footer() {
  return (
    <footer className=" urbanist chili bg-stone-900 pb-10 pt-8 ">
      <div className="morphism  mx-auto max-w-7xl rounded-lg border-white bg-transparent p-2 shadow-lg sm:p-6">
        <div className="grid grid-cols-1 gap-4 p-4  text-center text-white lg:grid-cols-3">
          <div className="morphism flex flex-col items-center justify-between gap-2	p-4">
            <h3 className="noto text-3xl">Our Location</h3>

            <div className="morphism overflow-hidden rounded-lg pt-2">
              <p>423 South Main Street</p>
              <p>Grapevine, TX 76051</p>
              <iframe
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3350.44830472116!2d-97.07334468481859!3d32.93418988093237!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x864c2bf77a1f8503%3A0x96f6083fb3909e6d!2s423%20S%20Main%20St%2C%20Grapevine%2C%20TX%2076051%2C%20USA!5e0!3m2!1sen!2s!4v1632432943826!5m2!1sen!2s"
                width="300"
                height="200"
                style={{ border: 0 }}
                allowFullScreen=""
                loading="lazy"
              ></iframe>
            </div>
            <div className=" flex flex-col items-center gap-0 rounded-lg border-white bg-transparent shadow-lg">
              <h3 className="noto text-3xl">Restaurant Hours</h3>
              <RestaurantSchema client:load />
            </div>
          </div>

          <div className="flex flex-col items-center justify-between gap-2">
            <div className="flex w-full flex-col items-center justify-center gap-4">
              <Form client:load />
            </div>
            <div className="morphism flex w-full flex-col items-center gap-0 rounded-lg border-white bg-transparent p-8 shadow-lg">
              <a href="/">
                <img
                  className="h-auto w-[150px] pb-4"
                  src="/logo-white.png"
                  alt="Logo"
                />
              </a>
              <a href="tel:(817)421-4888<"> 📲 (817) 421-4888</a>
              <a href="mailto:info@tolbertsrestaurant.com">
                ✉️ info@tolbertsrestaurant.com
              </a>
            </div>
          </div>
          <div className="morphism flex flex-col items-center justify-between gap-2 p-4">
            <div className=" flex flex-col items-center gap-2">
              <h3 className="noto text-3xl">Site Map</h3>
              <div className="flex flex-col items-center gap-0 pt-2">
                <a href="/" className={`p-2 text-xl hover:underline`}>
                  Home
                </a>

                <a
                  href="https://tolbertscms.com/wp-content/uploads/2024/04/TolbertsNewMenu010324.pdf"
                  className={`p-2 text-xl hover:underline`}
                >
                  Menu
                </a>
                <a
                  href="http://tolbertscms.com/wp-content/uploads/2024/04/Brunch-Menu-Current-April-2023.pdf"
                  className={`p-2 text-xl hover:underline`}
                >
                  Brunch
                </a>
                <a href="/calendar" className={`p-2 text-xl hover:underline`}>
                  Calendar
                </a>
                <a href="/about" className={`p-2 text-xl hover:underline`}>
                  About
                </a>
              </div>
            </div>
            <div className="morphism flex w-full flex-col justify-between rounded-lg border-white bg-transparent p-8 shadow-lg">
              <h3 className="noto text-lg">Join the Chilihead Club</h3>
              <a href="https://visitor.r20.constantcontact.com/manage/optin?v=0014Ogu2wnBvl8_ZbMlMzQ9KVX9rpr_smoVitHZKZig-keypGiny6WIeEEgXcEOx1-AiOhKLXw2Q2L0sW0VsGJ6VT7G5BoeQ4qErEvgGW2CZEo%3D">
                <Button
                  variant="default"
                  className="mt-2 rounded-full bg-white px-5 py-2 text-xl text-stone-900 transition-all duration-300 hover:translate-y-[-1px] hover:bg-white active:translate-y-[1px] active:scale-90"
                >
                  🌶️ Join Now
                </Button>
              </a>
            </div>
          </div>
        </div>
        <div className="noto flex items-center justify-center gap-1 text-lg text-white">
          &copy; {new Date().getFullYear()}{" "}
          <Button variant="link" className="p-0 text-base text-white">
            Tolbert's Restaurant
          </Button>
        </div>
      </div>
    </footer>
  );
}

================
File: src/components/FooterPhotoPanel.jsx
================
function PhotoGallery() {
  return (
    <div>
      <div className="grid grid-cols-2 sm:grid-cols-4">
        <img
          src="/tlb-1.jpg"
          alt="Description of the image"
          className="h-auto w-full object-cover object-center"
        />
        <img
          src="/tlb-3.jpg"
          alt="Description of the image"
          className="h-full w-full object-cover object-center"
        />
        <img
          src="/tlb-4.jpg"
          alt="Description of the image"
          className="h-full w-full object-cover object-center"
        />
        <img
          src="/tlb-2.jpg"
          alt="Description of the image"
          className="h-full w-full object-cover object-center"
        />
      </div>
    </div>
  );
}
export default PhotoGallery;

================
File: src/components/Form.jsx
================
import { Button } from "../components/ui/button";
import { useState } from "react";

function Form() {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [message, setMessage] = useState("");
  const [isSubmitted, setIsSubmitted] = useState(false); // Step 1: New state variable for submission status

  const handleSubmit = async (event) => {
    console.log("handleSubmit called");
    event.preventDefault();

    const response = await fetch("/api/contact-form-api.json", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        title: name,
        content: message,
        acf: {
          name: name,
          email: email,
          message: message,
        },
      }),
    });
    console.log(response);
    if (response.ok) {
      setIsSubmitted(true); // Step 2: Update the submission status
      setName("");
      setEmail("");
      setMessage("");
      setTimeout(() => setIsSubmitted(false), 5000); // Reset after 5 seconds
    } else {
      // Handle submission error
      console.error("Submission failed");
    }
  };

  return (
    <div className=" w-full bg-stone-900">
      <div className="morphism w-full p-4">
        <h3 className="noto pb-4 text-3xl">Contact Us</h3>
        {!isSubmitted ? (
          <form
            onSubmit={handleSubmit}
            className="sm:align-center flex w-full flex-col gap-2 rounded-lg sm:items-center"
          >
            <input
              type="text"
              placeholder="Your Name"
              value={name}
              onChange={(e) => setName(e.target.value)}
              className="w-full"
            />
            <input
              type="email"
              placeholder="Your Email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="w-full"
              required
            />{" "}
            <input
              type="text"
              placeholder="Your Message"
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              className="w-full"
              required
            ></input>
            <Button
              className="rounded-full bg-white px-5 py-2 text-xl text-stone-900 transition-all duration-300 hover:translate-y-[-1px] hover:bg-white active:translate-y-[1px] active:scale-90"
              type="submit"
              required
            >
              Submit
            </Button>
          </form>
        ) : (
          <p className="m-2 flex content-center justify-center rounded-lg bg-green-400 p-4 py-6 text-center text-2xl text-stone-900 ">
            Thank you for your submission!
          </p> // Step 3: Conditionally render the thank you message
        )}
      </div>
    </div>
  );
}

export default Form;

================
File: src/components/FormHorizontal.jsx
================
import { Button } from "../components/ui/button";
import { useState } from "react";

function FormHorizontal() {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [message, setMessage] = useState("");
  const [isSubmitted, setIsSubmitted] = useState(false); // Step 1: New state variable for submission status

  const handleSubmit = async (event) => {
    console.log("handleSubmit called");
    event.preventDefault();

    const response = await fetch("/api/contact-form-api.json", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        title: name,
        content: message,
        acf: {
          name: name,
          email: email,
          message: message,
        },
      }),
    });
    console.log(response);
    if (response.ok) {
      setIsSubmitted(true); // Step 2: Update the submission status
      setName("");
      setEmail("");
      setMessage("");
      setTimeout(() => setIsSubmitted(false), 5000); // Reset after 5 seconds
    } else {
      // Handle submission error
      console.error("Submission failed");
    }
  };

  return (
    <div className=" p-8  py-16 ">
      <div className="morphism-x mx-auto w-full max-w-7xl py-4">
        <h3 className="noto mx-4 text-pretty pt-4 text-center text-2xl text-white md:text-3xl lg:text-4xl">
          Rent our space, book your band, or get in touch about our chili! 🌶️
        </h3>
        {!isSubmitted ? (
          <form
            onSubmit={handleSubmit}
            className="sm:align-center flex w-full flex-col justify-center gap-2 rounded-lg p-4 sm:flex-row sm:items-center"
          >
            <input
              type="text"
              placeholder="Your Name"
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
            />
            <input
              type="email"
              placeholder="Your Email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
            />{" "}
            <input
              type="text"
              placeholder="Your Message"
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              required
              className="sm:h-[43px] sm:w-[50%]"
            ></input>
            <Button
              className="rounded-full bg-white px-5 py-2 text-xl text-stone-900 transition-all duration-300 hover:translate-y-[-1px] hover:bg-white active:translate-y-[1px] active:scale-90"
              type="submit"
            >
              Submit
            </Button>
          </form>
        ) : (
          <p className="m-2 flex content-center justify-center rounded-lg bg-green-400 p-4 py-6 text-center text-2xl text-stone-900 ">
            Thank you for your getting in touch with us! We will get back to you
            as soon as possible.
          </p> // Step 3: Conditionally render the thank you message
        )}
      </div>
    </div>
  );
}

export default FormHorizontal;

================
File: src/components/HeroMain.jsx
================
import { Button } from "../components/ui/button";
import Form from "../components/Form";
import OrderDropdown from "./OrderDropdown";

export default function HeroMain() {
  return (
    <div className="relative h-[80vh] w-[full] bg-stone-900">
      <video
        autoPlay
        muted
        loop
        playsInline
        className="absolute z-0 hidden h-full w-full object-cover sm:block"
      >
        <source
          src="https://tolbertscms.com/wp-content/uploads/2024/07/Copy-of-minute-cut.mp4"
          type="video/mp4"
        />
      </video>
      <img
        src="/tolbs-outside-mobile.jpg"
        className="absolute z-0 block h-full w-full object-cover sm:hidden"
        alt="Tolbert's Restaurant"
      />
      <div className="grid h-full grid-cols-1  gap-4 sm:w-full">
        <div className=" urbanist relative z-10 flex w-full flex-col justify-center bg-gradient-to-r  from-stone-700 to-transparent p-4 sm:col-span-1 sm:p-[64px]">
          <div className="mx-auto w-full max-w-7xl">
            <h1 className="max-w-xl	text-6xl font-bold text-white sm:text-8xl">
              Tolbert's Restaurant
            </h1>
            {/* <Form client:load /> */}
            <h3 className="urbanist mt-1 text-4xl font-bold text-white sm:text-6xl">
              & Chili Parlor 🌶️
            </h3>
            <div className="cta mt-2 inline-flex flex-col gap-1 sm:hidden">
              <a href="/calendar">
                <Button
                  variant=""
                  className="hover:stone-900 mt-2 w-full rounded-full bg-white py-6 text-xl text-stone-900 transition-all  duration-300 hover:translate-y-[-1px] hover:bg-stone-100 active:translate-y-[1px] active:scale-90"
                >
                  🗓️ Concert Calendar
                </Button>
              </a>
              <a href="https://order.spoton.com/rbbt-tolberts-restaurant-and-chili-parlor-15291/grapevine-tx/64e7d0d48137b6003f171eba">
                <Button
                  variant=""
                  className="hover:stone-900 mt-2 w-full rounded-full bg-teal-600 py-6 text-xl font-semibold text-white transition-all  duration-300 hover:translate-y-[-1px] hover:bg-teal-700 active:translate-y-[1px] active:scale-90"
                >
                  🚙 Order Food
                </Button>
              </a>
              {/* <OrderDropdown client:load /> */}
            </div>
          </div>
        </div>
        {/* <div className="align-center align-center hidden w-full flex-col items-center justify-center p-4 md:flex">
          <Form client:load />
        </div> */}
      </div>
    </div>
  );
}

================
File: src/components/ImageGallery.jsx
================
import img1 from "../assets/tolberts-gallery-1.jpg";
import img2 from "../assets/tolberts-gallery-2.jpg";
import img3 from "../assets/tolberts-gallery-3.jpg";
import img4 from "../assets/tolberts-gallery-4.jpg";
import img5 from "../assets/tolberts-gallery-5.jpg";
import img6 from "../assets/tolberts-gallery-6.jpg";
import img7 from "../assets/tolberts-gallery-7.jpg";
import img8 from "../assets/tolberts-gallery-8.jpg";
import img9 from "../assets/tolberts-gallery-9.jpg";
import img10 from "../assets/tolberts-gallery-10.jpg";
import img11 from "../assets/tolberts-gallery-11.jpg";
import img12 from "../assets/tolberts-gallery-12.jpg";
console.log(img11);
export default function ImageGallery() {
  const images = [
    img1,
    img2,
    img3,
    img4,
    img5,
    img6,
    img7,
    img8,
    img9,
    img10,
    img11,
    img12,
  ];

  return (
    <div className="p-8">
      <div className="mx-auto grid max-w-7xl grid-cols-1 gap-4 md:grid-cols-3">
        {images.map((image, index) => (
          <img
            key={index}
            src={image.src}
            alt={`gallery-${index}`}
            className="rounded-lg"
          />
        ))}
      </div>
    </div>
  );
}

================
File: src/components/Leaderboard.jsx
================
import { Button } from "./ui/button";
import { ChevronRight } from "lucide-react";

const Leaderboard = () => {
  return (
    <div className=" w-full">
      <div
        className="mx-auto max-w-7xl
  "
      >
        <div className="align-center grid grid-cols-1 justify-center gap-8 p-6 lg:grid-cols-2 lg:gap-2 lg:p-12 lg:py-24">
          <div className="flex flex-col items-start justify-center gap-4 lg:pr-6">
            <h1 className=" noto text-2xl text-stone-900 md:text-5xl">
              Tolbert's Restaurant
            </h1>
            <p className="sm:text-md mt-1 text-stone-900">
              Frank X. Tolbert’s life-long passion for chili inspired him to
              write his world-famous book “A Bowl of Red” 50 years ago. He
              founded the Terlingua Championship Chili Cook-Off in 1967 and
              joined forces with son Frank 2 in 1976 to open the first Tolbert’s
              Restaurant in Dallas, with daughter Kathleen helping manage
              starting in 1977. Kathleen, with her husband Paul Ryan, selected
              Grapevine’s historic Main Street as the new home of Tolbert’s in
              2006. The tradition continues as Tolbert’s Restaurant & Chili
              Parlor features classic southwestern cuisine with our signature
              Bowl of Red, using the same recipe developed by Frank X. Tolbert
              and his son. Enjoy your visit and tell your friends!
            </p>
            <p>— Kathleen, Paul and Steven Ryan</p>
            <a href="/about">
              <button
                className={`a flex flex-row items-center gap-2 rounded-full bg-teal-600 px-5 py-2 text-lg font-semibold text-white hover:bg-teal-700`}
              >
                Learn More <ChevronRight className="h-4 w-4" />
              </button>{" "}
            </a>
          </div>
          <div
            className="flex items-end justify-end rounded-lg bg-cover bg-center shadow-2xl"
            style={{
              backgroundImage: `url(/tolberts.webp)`,
              height: "300px",
            }}
          ></div>
        </div>
      </div>
    </div>
  );
};

export default Leaderboard;

================
File: src/components/Nav.astro
================
---

---

<div class="relative">
  <button
    class="right-0 top-0 flex h-10 w-10 flex-col items-center justify-center rounded-lg border-b border-stone-700 bg-stone-200 shadow-sm"
    id="menu-btn"
  >
    <span class="relative bottom-1 text-2xl text-stone-700">☰</span>
  </button>
  <ul
    id="menu"
    class="absolute -top-2 right-4 mt-12 hidden w-48 flex-col items-start rounded-md border border-stone-700 bg-stone-200 p-2 text-stone-700 shadow-md"
  >
    <li class="w-full">
      <a
        href="/"
        class="block rounded-md px-4 py-2 hover:bg-stone-200 focus:bg-stone-200"
      >
        Home</a
      >
    </li>
    <li class="w-full">
      <a
        href="/posts"
        class="block rounded-md px-4 py-2 hover:bg-stone-200 focus:bg-stone-200"
      >
        Blog Posts</a
      >
    </li>
  </ul>
</div>
<script>
  document.addEventListener("astro:page-load", () => {
    function toggleMenu() {
      const menu = document.getElementById("menu");
      if (menu.classList.contains("hidden")) {
        menu.classList.remove("hidden");
        menu.classList.add("flex");
      } else {
        menu.classList.add("hidden");
        menu.classList.remove("flex");
      }
    }

    const menuBtn = document.getElementById("menu-btn");
    menuBtn.removeEventListener("click", toggleMenu);
    menuBtn.addEventListener("click", toggleMenu);
  });
</script>

================
File: src/components/OrderDropdown.jsx
================
import React, { useState } from "react";

function OrderDropdown() {
  const [isOpen, setIsOpen] = useState(false);

  const handleButtonClick = () => {
    setIsOpen(!isOpen);
  };

  return (
    <div className="dropdown">
      <button
        onClick={handleButtonClick}
        className="order-btn inline-block rounded-full bg-lime-500 px-5 py-2 text-xl text-stone-900 hover:bg-lime-400"
      >
        🚙 Order Food
      </button>
      {isOpen && (
        <div className="is-open align-center z-100 absolute left-[34px] mt-1 flex flex-col gap-2 rounded-lg bg-stone-900 p-4 text-xl text-white">
          <a
            className="hover:text-lime-400 active:text-lime-400"
            href="https://www.ubereats.com/dallas/food-delivery/tolberts-restaurant/E0auRfDRQ_e9RRP32vWMQw?fbclid=IwAR0qXPc6YEgE8uzjHTcMQ_kVj-eVv1NcGkO8PCDLkA-8tgO9NC6Z1XBT6yM"
          >
            Uber Eats
          </a>
          <a
            className="hover:text-lime-400 active:text-lime-400"
            href="https://www.doordash.com/store/tolbert's-restaurant-grapevine-27945/?fbclid=IwAR34uGVgDg3xEm0VoUWg4rKZafHMrEgQLDWPmzhNHhM2gvIx36rCwemQcEo"
          >
            Door Dash
          </a>
        </div>
      )}
    </div>
  );
}

export default OrderDropdown;

================
File: src/components/PostCard.astro
================
---
import { Image } from "astro:assets";
interface Props {
  post: any;
}
const { post } = Astro.props;
const { title, description, pubDate, image, author } = post.data;
---

<li
  class="list-none overflow-hidden rounded-lg border bg-stone-100 p-4 shadow-sm"
>
  <a href={"/posts/" + post.slug} class="text-decoration-none">
    <div>
      <Image src={image.url} alt={image.alt} class="h-auto w-full rounded-sm" />
      <h2 class="mt-2 line-clamp-2 text-lg font-bold">{title}</h2>
      <p class="mt-1 text-xs text-gray-600">
        {new Date(pubDate).toLocaleDateString()}
      </p>
      <p class="mt-2 line-clamp-3 text-sm text-gray-800">{description}</p>
    </div>
  </a>
</li>

================
File: src/components/RestaurantSchema.jsx
================
const OPENING_HOURS = {
  Friday: "11:00-24:00",
  Saturday: "11:00-24:00",
  Sunday: "11:00-21:00",
  Monday: "11:00-21:00",
  Tuesday: "11:00-22:00",
  Wednesday: "11:00-23:00",
  Thursday: "11:00-23:00",
};

const convertToReadableTime = (hours) => {
  const [opening, closing] = hours.split("-");
  const convertTime = (time) => {
    const [hour, minute] = time.split(":");
    let intHour = parseInt(hour, 10);
    const ampm = intHour >= 12 ? "PM" : "AM";
    intHour = intHour % 12 || 12; // Convert to 12-hour format
    return `${intHour}:${minute} ${ampm}`;
  };

  const adjustedClosing = closing === "24:00" ? "00:00" : closing; // Adjust midnight to 00:00
  return `${convertTime(opening)} - ${convertTime(adjustedClosing)}`;
};

export default function RestaurantSchema() {
  return (
    <div>
      {Object.entries(OPENING_HOURS).map(([day, hours]) => (
        <p itemProp="openingHours" key={day} content={hours}>
          {`${day}: ${convertToReadableTime(hours)}`}
        </p>
      ))}
      <p>
        Closing times may vary so please call first to verify. Enjoy Happy Hour
        Monday thru Friday!
      </p>
    </div>
  );
}

================
File: src/components/Testimonials.jsx
================
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from "@/components/ui/carousel";

const testimonials = [
  {
    text: "“Probably the best chili ever. And if you don’t get donkey tails you’re not getting the full experience. TONS of beer options, good food, good atmosphere and friendly staff! We always go when we’re in town!”",
    author: "Jerica Q.",
  },
  {
    text: "“Great Music, comfortable cozy venue.  A place I would visit again with friends!”",
    author: "Jean T.C.",
  },
  {
    text: "“We could hear the music from across the street. We stopped in for a beer and enjoyed the band.  Ended up closing the place down!”",
    author: "William S.",
  },
  {
    text: "”Great food and atmosphere, loved the food. Will be back!“",
    author: "Larry M.",
  },
  {
    text: "“Tolbert’s chili parlor is unspeakably good. It’s goodness transcends the bounds of any language. You might die if you don’t go- at least die on the inside.”",
    author: "Mark E.",
  },
];

function Testimonials() {
  return (
    <section className="flex flex-col gap-4 bg-[url('/tolbs-outside.jpg')] bg-cover bg-center bg-no-repeat px-4 py-[148px] text-white">
      <div className="morphism-x container px-8 flex w-full flex-col gap-4 p-4 pt-6 lg:py-12 lg:px-14 shadow-lg sm:w-1/2">
        <h2 className="noto text-center text-3xl lg:text-4xl font-bold">
          ⭐️⭐️⭐️⭐️⭐️
        </h2>
        <Carousel>
          <CarouselContent>
            {testimonials.map((testimonial, index) => (
              <CarouselItem key={index}>
                <p className="lg:text-lg" >{testimonial.text}</p>

                <p className="text-right text-xl lg:text-2xl font-bold">
                  - {testimonial.author}
                </p>
              </CarouselItem>
            ))}
          </CarouselContent>
          <div className="mt-4 flex justify-between">
            <CarouselPrevious />
            <CarouselNext />
          </div>
        </Carousel>
      </div>
    </section>
  );
}

export default Testimonials;

================
File: src/components/TopNav.jsx
================
import { useState, useEffect } from "react";
import { Button } from "../components/ui/button";

export default function TopNav() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  useEffect(() => {
    if (typeof window !== "undefined") {
      const initialScrollTop =
        document.documentElement.scrollTop || document.body.scrollTop;
      setIsScrolled(initialScrollTop > 100);

      const checkScroll = () => {
        const scrollTop =
          document.documentElement.scrollTop || document.body.scrollTop;
        setIsScrolled(scrollTop > 100);
      };

      window.addEventListener("scroll", checkScroll);
      return () => {
        window.removeEventListener("scroll", checkScroll);
      };
    }
  }, []);

  return (
    <nav
      className={`duration-800 urbanist fixed top-0 z-50 w-full justify-between p-4 text-xl font-semibold shadow-lg	transition-all ${isScrolled ? "bg-white text-stone-900" : "bg-stone-900 text-white"}`}
    >
      <div className="mx-auto flex w-full max-w-7xl items-center justify-between">
        <div
          className="logo duration-800 transition-all"
          style={{ width: isScrolled ? "75px" : "125px" }}
        >
          <a href="/">
            <img
              className="h-auto"
              src={isScrolled ? "/logo-black.png" : "/logo-white.png"}
              alt="Logo"
            />
          </a>
        </div>
        {/* Mobile menu button */}
        <button
          className="flex items-center pb-2 text-4xl opacity-100 transition-all duration-200 sm:hidden"
          onClick={() => setIsMenuOpen(!isMenuOpen)}
          style={{ opacity: isMenuOpen ? 0.5 : 1 }}
        >
          {isMenuOpen ? "✕" : "☰"}
        </button>
        {/* Desktop navigation links */}
        <div className="menu flex hidden w-full items-center justify-end space-x-4 underline-offset-4 sm:flex">
          <a
            href="/"
            className={`text-xl hover:underline ${isScrolled ? "text-stone-900" : "text-white"}`}
          >
            Home
          </a>
          <a
            href="https://tolbertscms.com/wp-content/uploads/2024/11/TolbertsNewMenu090424.pdf"
            className={`text-xl hover:underline ${isScrolled ? "text-stone-900" : "text-white"}`}
          >
            Menu
          </a>
          <a
            href="https://tolbertscms.com/wp-content/uploads/2024/04/Brunch-Menu-Current-April-2023.pdf"
            className={`p-2 text-xl hover:underline`}
          >
            Brunch
          </a>
          <a
            href="/about"
            className={`text-xl hover:underline ${isScrolled ? "text-stone-900" : "text-white"}`}
          >
            About
          </a>
          <a
            href="/calendar"
            className={`text-xl hover:underline ${isScrolled ? "text-stone-900" : "text-white"}`}
          >
            Calendar
          </a>
          <a href="https://order.spoton.com/rbbt-tolberts-restaurant-and-chili-parlor-15291/grapevine-tx/64e7d0d48137b6003f171eba">
            <button
              className={`rounded-full bg-teal-600 px-5 py-2 text-xl font-semibold hover:bg-teal-700  ${isScrolled ? "text-white" : "text-white"}`}
            >
              Order Food
            </button>
          </a>
        </div>{" "}
      </div>

      {/* Mobile navigation links */}

      <div
        className={`menu flex w-full items-center justify-end gap-4 underline-offset-4 transition-opacity duration-500 sm:hidden md:flex md:hidden ${isMenuOpen ? "visible flex h-auto flex-col opacity-100 sm:block" : "invisible h-0 opacity-0 md:flex"}`}
      >
        <a
          href="/"
          className={`p-2 text-3xl hover:underline  ${isScrolled ? "text-stone-900" : "text-white"}`}
        >
          Home
        </a>

        <a
          href="https://tolbertscms.com/wp-content/uploads/2024/04/TolbertsNewMenu010324.pdf"
          className={`p-2 text-3xl hover:underline  ${isScrolled ? "text-stone-900" : "text-white"}`}
        >
          Menu
        </a>
        <a
          href="http://tolbertscms.com/wp-content/uploads/2024/04/Brunch-Menu-Current-April-2023.pdf"
          className={`p-2 text-3xl hover:underline  ${isScrolled ? "text-stone-900" : "text-white"}`}
        >
          Brunch
        </a>
        <a
          href="/calendar"
          className={`p-2 text-3xl hover:underline  ${isScrolled ? "text-stone-900" : "text-white"}`}
        >
          Calendar
        </a>
        <a
          href="/about"
          className={`p-2 text-3xl hover:underline  ${isScrolled ? "text-stone-900" : "text-white"}`}
        >
          About
        </a>
        <a href="https://order.spoton.com/rbbt-tolberts-restaurant-and-chili-parlor-15291/grapevine-tx/64e7d0d48137b6003f171eba">
          <Button
            variant=""
            className="flex flex-row items-center gap-2 rounded-full bg-teal-600 px-5 py-2 text-lg font-semibold text-white hover:bg-teal-700"
          >
            Order Food
          </Button>
        </a>
        {/* <select
          className={`mb-4 rounded-full bg-lime-500 p-2 px-5 text-center text-3xl hover:bg-lime-600  ${isScrolled ? "text-white" : "text-stone-900"}`}
          onChange={(e) => (window.location.href = e.target.value)}
        >
          <option value="" selected disabled>
            Order Food 
          </option>
          <option value="https://www.ubereats.com/dallas/food-delivery/tolberts-restaurant/E0auRfDRQ_e9RRP32vWMQw?fbclid=IwAR0qXPc6YEgE8uzjHTcMQ_kVj-eVv1NcGkO8PCDLkA-8tgO9NC6Z1XBT6yM">
            Uber Eats
          </option>
          <option value="https://www.doordash.com/store/tolbert's-restaurant-grapevine-27945/?fbclid=IwAR34uGVgDg3xEm0VoUWg4rKZafHMrEgQLDWPmzhNHhM2gvIx36rCwemQcEo">
            Door Dash
          </option>
        </select> */}
      </div>
    </nav>
  );
}

================
File: src/content/posts/tolberts-restaurant-chili-parlor-history.md
================
---
title: "Tolbert's Restaurant and Chili Parlor: A Rich History in Grapevine, Texas"
author: "Historical Society Team of Texas"
description: "Discover the fascinating history of Tolbert's Restaurant and Chili Parlor in Grapevine, Texas, and the legacy of Frank X. Tolbert and his family's role in the creation of the Terlingua Chili Cookoff."
image:
  url: "../../assets/ar-ogimage-optimized.png"
  alt: "Tolbert's Restaurant and Chili Parlor in Grapevine, Texas."
pubDate: 2024-07-27
tags:
  [
    "Tolbert's Restaurant",
    "chili cookoff",
    "Frank X. Tolbert",
    "Terlingua",
    "Grapevine Texas",
    "history",
    "Texas cuisine",
  ]
---

### The Birth of a Legacy

Tolbert's Restaurant and Chili Parlor, nestled in the heart of Grapevine, Texas, is more than just a place to enjoy a hearty meal; it's a living testament to a family's dedication to the culinary arts and Texas history. The roots of this renowned establishment trace back to Frank X. Tolbert, a legendary figure in Texas folklore and cuisine.

### Frank X. Tolbert: The Man Behind the Legend

Frank X. Tolbert was a larger-than-life character, known for his colorful personality and deep love for Texas culture. Born in 1912, Frank became a prominent journalist, historian, and chili enthusiast. His passion for chili was not just about the food itself but also the rich traditions and stories that accompanied it.

### The Inception of the Terlingua Chili Cookoff

In 1967, Frank X. Tolbert, along with his friend Wick Fowler, co-founded the original Terlingua Chili Cookoff in Terlingua, Texas. This event was more than a cooking competition; it was a celebration of Texan heritage and the spirit of the Wild West. The cookoff quickly gained popularity, attracting chili lovers from all over the country and becoming an annual tradition.

### A Family Affair

The Tolbert family's involvement in the chili world did not stop with Frank. His children and grandchildren have continued to uphold his legacy, ensuring that the rich history and traditions of Texas chili are preserved for future generations. This commitment to excellence and authenticity is evident in every bowl of chili served at Tolbert's Restaurant and Chili Parlor.

### From Terlingua to Grapevine: The Evolution of Tolbert's Restaurant

The journey from the dusty plains of Terlingua to the charming streets of Grapevine was marked by a series of significant milestones. In 1976, Frank X. Tolbert opened the first Tolbert's Restaurant in Dallas, Texas. This establishment quickly became a favorite among locals and visitors alike, known for its warm atmosphere and mouthwatering chili.

After Frank's passing in 1984, his family continued to honor his memory by expanding the restaurant's presence. In 2006, the Tolbert family opened Tolbert's Restaurant and Chili Parlor in Grapevine, Texas. This new location combined the traditional elements of the original restaurant with a fresh, modern twist, creating a unique dining experience that pays homage to its roots.

### A Culinary Experience Like No Other

Tolbert's Restaurant and Chili Parlor offers a menu that reflects the rich culinary heritage of Texas. From the iconic "Bowl of Red" chili to savory Tex-Mex dishes, every item on the menu is crafted with care and a deep respect for tradition. The restaurant also features live music, adding to the vibrant and welcoming atmosphere that has become synonymous with the Tolbert name.

### Continuing the Legacy

Today, Tolbert's Restaurant and Chili Parlor stands as a beacon of Texan culture and cuisine. The Tolbert family remains actively involved in the restaurant's operations, ensuring that each guest experiences the same warmth and hospitality that Frank X. Tolbert himself would have offered.

As we celebrate the rich history of Tolbert's, we invite you to join us in honoring the legacy of Frank X. Tolbert and his contributions to Texas cuisine. Whether you're a long-time fan or a first-time visitor, Tolbert's Restaurant and Chili Parlor promises an unforgettable dining experience that captures the heart and soul of Texas.

Come visit us in Grapevine, Texas, and become a part of the Tolbert tradition.

================
File: src/content/config.ts
================
// Import utilities from `astro:content`
import { z, defineCollection } from "astro:content";
// Define a `type` and `schema` for each collection
const postsCollection = defineCollection({
  type: "content",
  schema: ({ image }) =>
    z.object({
      title: z.string(),
      pubDate: z.date(),
      description: z.string(),
      author: z.string(),
      image: z.object({
        url: image().refine((img) => img.width >= 1080, {
          message: "Cover image must be at least 1080 pixels wide!",
        }),
        alt: z.string(),
      }),
      tags: z.array(z.string()),
    }),
});
// Export a single `collections` object to register your collection(s)
export const collections = {
  posts: postsCollection,
};

================
File: src/layouts/Layout.astro
================
---
import { ViewTransitions } from "astro:transitions";
import "../styles/globals.css";
import TopNav from "@/components/TopNav";
import Footer from "@/components/Footer";
import { baseSchema } from "@/lib/seo/schemas";

interface Props {
  metaTags: {
    title: string;
    description: string;
    image?: string;
    url: string;
    twitterHandle?: string;
    schemaData?: object[];
  };
}

const { metaTags } = Astro.props;

const dynamicSchema = metaTags.schemaData ?? [];

const fullSchema = [baseSchema, ...dynamicSchema];
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{metaTags.title}</title>
    <meta name="description" content={metaTags.description} />
    <meta property="og:title" content={metaTags.title} />
    <meta property="og:description" content={metaTags.description} />
    <meta
      property="og:image"
      content="https://tolbertsrestaurant.netlify.app/tolberts.webp"
    />
    <meta property="og:url" content={metaTags.url} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:creator"
      content={metaTags.twitterHandle || "@riefer02"}
    />
    <meta name="twitter:title" content={metaTags.title} />
    <meta name="twitter:description" content={metaTags.description} />
    <meta
      name="twitter:image"
      content="https://tolbertsrestaurant.netlify.app/tolberts.webp"
    />
    <link rel="canonical" href={metaTags.url} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <ViewTransitions />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,100..900;1,100..900&family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <script type="application/ld+json" set:html={JSON.stringify(fullSchema)} />
    <!-- Google Tag Manager -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-M7XS77GM");
    </script>
    <!-- End Google Tag Manager -->
  </head>
  <body class="bg-stone-200 text-stone-800">
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-M7XS77GM"
        height="0"
        width="0"
        style="display:none;visibility:hidden"></iframe></noscript
    >
    <!-- End Google Tag Manager (noscript) -->
    <TopNav client:load />
    <div class="chili-white pt-20">
      <slot />
    </div>
    <Footer client:load />
    <style is:global>
      :root {
        --accent: 136, 58, 7;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
      }
    </style>
  </body>
</html>

================
File: src/layouts/MarkdownPostLayout.astro
================
---
import Layout from "./Layout.astro";
const { frontmatter } = Astro.props;

const blogPostSchema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: frontmatter.title,
  description: frontmatter.description,
  image: frontmatter.image.url.src,
  author: {
    "@type": "Person",
    name: frontmatter.author,
  },
  datePublished: frontmatter.pubDate,
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": `https://tolbertsrestaurant.com/posts/${frontmatter.slug}`,
  },
  publisher: {
    "@type": "Organization",
    name: "Tolbert's Restaurant & Chili Parlor",
    logo: {
      "@type": "ImageObject",
      url: "https://tolbertsrestaurant.netlify.app/tolberts.webp",
    },
  },
  articleBody: frontmatter.description, // Placeholder, you can adjust based on your needs
  keywords: frontmatter.tags ? frontmatter.tags.join(", ") : "",
};

const metaTags = {
  title: frontmatter.title,
  description: frontmatter.description,
  image: frontmatter.image.url.src,
  url: `https://tolbertsrestaurant.com/posts/${frontmatter.slug}`,
  schemaData: [blogPostSchema],
};
---

<Layout metaTags={metaTags}>
  <div class="mx-auto max-w-2xl px-4 py-6">
    <p class="text-xs text-gray-600 sm:text-sm">
      {frontmatter.pubDate.toString().slice(0, 10)}
    </p>
    <h1 class="mb-4 mt-2 text-2xl font-bold text-gray-900 sm:text-4xl">
      {frontmatter.title}
    </h1>
    <p class="mb-4 text-base italic text-gray-700 sm:text-lg">
      {frontmatter.description}
    </p>
    <p class="mb-6 text-sm font-medium">
      Written by: <span class="text-indigo-600">{frontmatter.author}</span>
    </p>
    <img
      class="mb-8 h-auto w-full rounded-lg shadow-md"
      src={frontmatter.image.url.src}
      alt={frontmatter.image.alt}
    />
    {
      frontmatter.tags && frontmatter.tags.length > 0 && (
        <div class="mb-4 flex flex-wrap gap-2">
          {frontmatter.tags.map((tag) => (
            <span class="rounded-3xl bg-stone-700 px-2.5 py-1.5 text-xs font-semibold text-stone-100">
              {tag}
            </span>
          ))}
        </div>
      )
    }
    <article
      class="prose prose-sm prose-stone sm:prose lg:prose-lg xl:prose-xl"
    >
      <slot />
    </article>
  </div>
</Layout>

================
File: src/lib/seo/schemas.ts
================
export const baseSchema = {
  "@context": "https://schema.org",
  "@type": ["Restaurant", "MusicVenue"],
  name: "Tolbert's Restaurant & Chili Parlor",
  description:
    "Tolbert's Restaurant is a family-owned and operated restaurant located in Grapevine, Texas. We serve the best chili in Texas and have live music events regularly.",
  address: {
    "@type": "PostalAddress",
    streetAddress: "423 S Main St",
    addressLocality: "Grapevine",
    addressRegion: "TX",
    postalCode: "76051",
    addressCountry: "US",
  },
  image: "https://tolbertsrestaurant.netlify.app/tolberts.webp",
  telephone: "+1-817-555-1234",
  url: "https://tolbertsrestaurant.com",
  sameAs: [
    "https://www.facebook.com/tolbertsrestaurant",
    "https://www.instagram.com/tolbertsrestaurant",
  ],
  servesCuisine: "American",
  menu: "https://tolbertsrestaurant.com/menu",
  acceptsReservations: "True",
  openingHours: [
    "Mo 11:00-21:00",
    "Tu 11:00-22:00",
    "We 11:00-23:00",
    "Th 11:00-23:00",
    "Fr 11:00-24:00",
    "Sa 11:00-24:00",
    "Su 11:00-21:00",
  ],
};

export function generateEventSchema(event) {
  return {
    "@context": "https://schema.org",
    "@type": "Event",
    name: event.postTypeEvent.primaryHeader,
    description: event.postTypeEvent.description,
    image: event.postTypeEvent.image.sourceUrl,
    startDate: new Date(
      `${event.postTypeEvent.date} ${event.postTypeEvent.startTime}`,
    ).toISOString(),
    endDate: new Date(
      `${event.postTypeEvent.date} ${event.postTypeEvent.endTime}`,
    ).toISOString(),
    location: {
      "@type": "Place",
      name: "Tolbert's Restaurant & Chili Parlor",
      address: {
        "@type": "PostalAddress",
        streetAddress: "423 S Main St",
        addressLocality: "Grapevine",
        addressRegion: "TX",
        postalCode: "76051",
        addressCountry: "US",
      },
    },
    performer: {
      "@type": "MusicGroup",
      name: event.postTypeEvent.primaryHeader,
      description: event.postTypeEvent.secondaryHeader,
    },
  };
}

================
File: src/lib/wordpress/api.ts
================
const API_URL = import.meta.env.WORDPRESS_API_URL;

export default async function fetchAPI(query, variables = {}) {
  const headers = { "Content-Type": "application/json" };

  if (process.env.WORDPRESS_AUTH_REFRESH_TOKEN) {
    headers["Authorization"] =
      `Bearer ${process.env.WORDPRESS_AUTH_REFRESH_TOKEN}`;
  }

  const res = await fetch(API_URL, {
    method: "POST",
    headers,
    body: JSON.stringify({
      query,
      variables,
    }),
  });

  const json = await res.json();

  if (json.errors) {
    console.error(json.errors);
    throw new Error("Failed to fetch API");
  }

  return json.data;
}

================
File: src/lib/wordpress/fetchEvents.ts
================
import fetchAPI from "./api";

export async function getEvents() {
  const data = await fetchAPI(
    `query AllEvents {
        events(first: 100) {
            edges {
              node {
                id
                postTypeEvent {
                  date
                  primaryHeader
                  secondaryHeader
                  image {
                    sourceUrl
                  }
                  description
                  endTime
                  startTime
                }
              }
            }
        }
    }
`,
    {
      variables: {},
    },
  );
  return data?.events?.edges;
}

export async function getSingleEvent(id) {
  const data = await fetchAPI(
    `
      query getSingleEvent($id:ID!){
          event(id:$id){   
            id,        
            postTypeEvent {
              cta
              date
              location
              name
              primaryHeader
              secondaryHeader
              image {
                  sourceUrl
              }
              description
              endTime
              startTime
            }
          }
        }
      `,
    { id },
  );

  return data?.event;
}

================
File: src/lib/utils.ts
================
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

================
File: src/pages/api/contact-form-api.json.js
================
export const prerender = false;

export const POST = async ({ request }) => {
  const body = await request.json();

  const url = `${import.meta.env.WORDPRESS_URL}/wp-json/custom/v1/submit_contact_form`;

  const wpResponse = await fetch(url, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization:
        "Basic " +
        Buffer.from(
          `${import.meta.env.WORDPRESS_USER}:${import.meta.env.WORDPRESS_PASSWORD}`,
        ).toString("base64"),
    },
    body: JSON.stringify({
      title: body.title,
      content: body.content,
      name: body.acf.name,
      email: body.acf.email,
      message: body.acf.message,
    }),
  });

  if (!wpResponse.ok) {
    return new Response("Failed to create post", { status: 400 });
  }

  const data = await wpResponse.json();
  return new Response(JSON.stringify(data), {
    status: 200,
    headers: {
      "Content-Type": "application/json",
    },
  });
};

export const GET = async ({ params }) => {
  // Here you can handle GET requests
};

export const DELETE = async ({ params }) => {
  // Here you can handle DELETE requests
};

================
File: src/pages/posts/[...slug].astro
================
---
import { getCollection } from "astro:content";
import MarkdownPostLayout from "../../layouts/MarkdownPostLayout.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<MarkdownPostLayout frontmatter={entry.data}>
  <Content />
</MarkdownPostLayout>

================
File: src/pages/posts/index.astro
================
---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import PostCard from "../../components/PostCard.astro";

const allPosts = await getCollection("posts");

const sortedPosts = allPosts.sort((a, b) => {
  return new Date(b.data.pubDate) - new Date(a.data.pubDate);
});

const metaTags = {
  title: "Archive of Blog Posts - Andrew Riefenstahl",
  description:
    "Dive into a comprehensive collection of all my blog posts. Explore various topics, insightful articles, and more spanning from 2023 to the present.",
  url: "https://tolbertsrestaurant.com/posts",
};
---

<Layout metaTags={metaTags}>
  <main class="mx-auto max-w-7xl p-4 py-8 md:py-14 lg:py-24">
    <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 xl:grid-cols-3">
      {sortedPosts.map((post) => <PostCard post={post} />)}
    </div>
  </main>
</Layout>

================
File: src/pages/404.astro
================
---
const homeUrl = "/";
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Tolbert's Restaurant - Page Not Found</title>
        <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    </head>
    <body class="flex items-center justify-center h-screen bg-gray-100 text-gray-800" style="background-image: url('/tolbs-outside-mobile.jpg'); background-size: cover; background-position: center;">
        <div class="max-w-md p-6 bg-white bg-opacity-80 shadow-md rounded-lg text-center">
            <h1 class="text-3xl font-bold mb-4">404 - Page Not Found</h1>
            <p class="mb-6">Sorry, the page you are looking for does not exist.</p>
            <a href={homeUrl} class="inline-block px-6 py-2 text-white bg-blue-500 rounded hover:bg-blue-600 transition-colors">
                Go to Homepage
            </a>
        </div>
    </body>
</html>

================
File: src/pages/about.astro
================
---
import Layout from "../layouts/Layout.astro";
import Analytics from "../components/Analytics.astro";
import { AccordionDemo } from "@/components/Accordion";
import { YouTube } from "astro-embed";
import FooterPhotoPanel from "@/components/FooterPhotoPanel";
import { Button } from "../components/ui/button";
import { ChevronRight } from "lucide-react";
import ImageGallery from "@/components/ImageGallery";

const faqData = [
  {
    question: "What is the history behind Tolbert's Chili Parlor?",
    answer:
      "Tolbert's Chili Parlor was founded by Frank X. Tolbert in 1976 in Dallas, originally. Frank X. Tolbert is known as 'The Grandfather of Chili' and co-founded the Terlingua Chili Cookoff in 1967. The restaurant is now located in a historic building from 1911 in downtown Grapevine, Texas.",
  },
  {
    question: "What is unique about the Terlingua burger at Tolbert's?",
    answer:
      "The Terlingua burger at Tolbert's features the famous Terlingua chili. It is served on a grilled brioche bun with cheese, diced onions, and seasoned with Terlingua chili salt. The beef patty receives an abundance of flame, making the burger notably juicy and flavorful.",
  },
  {
    question: "Is Tolbert's Chili Parlor suitable for children?",
    answer:
      "Yes, Tolbert's Chili Parlor is family-friendly and suitable for children. The menu offers a variety of options that cater to all age groups, ensuring a pleasant dining experience for families.",
  },
  {
    question: "Does Tolbert's Chili Parlor have vegetarian options?",
    answer:
      "While Tolbert's Chili Parlor is famous for its chili and burgers, they do offer a selection of vegetarian options. Please check their current menu or ask the staff for vegetarian dishes available during your visit.",
  },
  {
    question: "Can you dine at Tolbert's Chili Parlor without a reservation?",
    answer:
      "Yes, Tolbert's Chili Parlor generally welcomes walk-ins. However, during busy times or for large groups, it's advisable to make a reservation to ensure seating is available.",
  },
  {
    question: "What are the operating hours of Tolbert's Chili Parlor?",
    answer:
      "Open daily at 11:00am. Closing times may vary so please call first to verify. Enjoy Happy Hour Monday thru Friday!",
  },
  {
    question: "Is there parking available at Tolbert's Chili Parlor?",
    answer:
      "Yes, there is parking available near Tolbert's Chili Parlor. There are street parking options and public parking lots in downtown Grapevine, which are convenient for visitors.",
  },
];

const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  mainEntity: faqData.map((faq) => ({
    "@type": "Question",
    name: faq.question,
    acceptedAnswer: {
      "@type": "Answer",
      text: faq.answer,
    },
  })),
};

const aboutSchema = {
  "@context": "https://schema.org",
  "@type": "AboutPage",
  name: "About Tolbert's Restaurant",
  description:
    "Frank X. Tolbert’s life-long passion for chili inspired him to write his world-famous book “A Bowl of Red” 50 years ago. He founded the Terlingua Championship Chili Cook-Off in 1967 and joined forces with son Frank 2 in 1976 to open the first Tolbert’s Restaurant in Dallas, with daughter Kathleen helping manage starting in 1977.",
  mainEntity: {
    "@type": "Organization",
    name: "Tolbert's Restaurant & Chili Parlor",
    logo: "https://tolbertsrestaurant.netlify.app/tolberts.webp",
    sameAs: [
      "https://www.facebook.com/tolbertsrestaurant",
      "https://www.instagram.com/tolbertsrestaurant",
    ],
    url: "https://tolbertsrestaurant.com",
  },
};

const metaTags = {
  title: "About Tolbert's Restaurant",
  description:
    "Frank X. Tolbert’s life-long passion for chili inspired him to write his world-famous book “A Bowl of Red” 50 years ago. He founded the Terlingua Championship Chili Cook-Off in 1967 and joined forces with son Frank 2 in 1976 to open the first Tolbert’s Restaurant in Dallas, with daughter Kathleen helping manage starting in 1977.",
  url: "https://tolbertsrestaurant.com/about",
  twitterHandle: "@riefer02",
  schemaData: [aboutSchema, faqSchema],
};
---

<Layout metaTags={metaTags}>
  <Analytics />

  <div
    class="mx-auto grid max-w-6xl grid-cols-1 justify-center gap-4 p-4 py-8 md:py-14 lg:grid-cols-2 lg:py-24"
  >
    <div class="flex flex-col justify-center gap-4 lg:pr-6">
      <h1 class="noto text-4xl">About Tolbert's Restaurant</h1>
      <p>
        Tolbert’s Restaurant and Chili Parlor in Grapevine, Texas, stands as a testament to Frank X. Tolbert's legacy in Texas folklore and cuisine. Frank, a larger-than-life journalist and historian born in 1912, co-founded the renowned Terlingua Chili Cookoff in 1967, celebrating Texan heritage. The Tolbert family's commitment to preserving Frank's passion for chili continues through their involvement in the restaurant, ensuring authenticity and excellence in every dish. The first Tolbert’s Restaurant opened in Dallas in 1976, and after Frank’s passing in 1984, his family expanded the restaurant to Grapevine in 2006. Combining traditional and modern elements, Tolbert’s offers a rich Texan culinary experience, complete with live music, and remains a beloved cultural landmark.

      </p>
      <a href="/posts/tolberts-restaurant-chili-parlor-history/">
        <Button variant="default" className="flex flex-row gap-2 rounded-full bg-teal-600 px-5 py-6 align-middle text-lg font-semibold text-white hover:bg-teal-700">
          Read More <ChevronRight className="h-4 w-4" />
        </Button>
      </a>
      
      </a>
    </div>

    <div>
      <YouTube class="rounded-lg" id="https://youtu.be/XgkegPojcCE" />
    </div>
  </div>
  <ImageGallery client:load />

  <FooterPhotoPanel client:load />
  <div class="w-full bg-stone-900 p-8 text-2xl text-white">
    <div class="mx-auto max-w-5xl">
      <h2 class="noto mt-12 text-4xl">FAQ</h2>
      <AccordionDemo faqData={faqData} client:load />
    </div>
  </div>
</Layout>

================
File: src/pages/calendar.astro
================
---
export const prerender = false;
import Layout from "../layouts/Layout.astro";
import Analytics from "../components/Analytics.astro";
import CalendarApp from "@/components/Calendar";
import { getEvents } from "../lib/wordpress/fetchEvents";
import Hero from "@/components/CalendarHero";
import { generateEventSchema } from "@/lib/seo/schemas";

const events = await getEvents();

const eventSchemas = events.map((event) => generateEventSchema(event.node));

const metaTags = {
  title: "Tolbert's Restaurant Events Calendar",
  description:
    "Frank X. Tolbert’s life-long passion for chili inspired him to write his world-famous book “A Bowl of Red” 50 years ago. He founded the Terlingua Championship Chili Cook-Off in 1967 and joined forces with son Frank 2 in 1976 to open the first Tolbert’s Restaurant in Dallas, with daughter Kathleen helping manage starting in 1977.",
  url: "https://tolbertsrestaurant.com/events",
  twitterHandle: "@riefer02",
  schemaData: eventSchemas,
};
---

<Layout metaTags={metaTags}>
  <Analytics />
  <main class="bg-repeat md:mt-0">
    <div class="hidden lg:block">
      <Hero events={events} client:load />
    </div>
    <div class="mx-auto max-w-7xl">
      <CalendarApp events={events} client:load />
    </div>
  </main>
</Layout>

================
File: src/pages/index.astro
================
---
export const prerender = false;
import Layout from "../layouts/Layout.astro";
import Analytics from "../components/Analytics.astro";
import { getEvents } from "../lib/wordpress/fetchEvents";
import Hero from "../components/CalendarHero";
import Leaderboard from "../components/Leaderboard";
import FooterPhotoPanel from "@/components/FooterPhotoPanel";
import Testimonials from "@/components/Testimonials";
import HeroMain from "@/components/HeroMain";
import FormHorizontal from "@/components/FormHorizontal";
import { generateEventSchema } from "@/lib/seo/schemas";
import Announcment from "@/components/Announcement";

const events = await getEvents();

const eventSchemas = events.map((event) => generateEventSchema(event.node));

const metaTags = {
  title: "Tolbert's Restaurant",
  description:
    "Tolbert's Restaurant is a family-owned and operated restaurant located in Grapevine, Texas. We serve the best chili in Texas and have a full menu of delicious food and drinks.",
  url: "https://tolbertsrestaurant.com",
  twitterHandle: "@riefer02",
  schemaData: eventSchemas,
};
---

<Layout metaTags={metaTags}>
  <Analytics />
  <main class="content">
    <HeroMain client:load />
    <!-- <Announcment client:load /> -->
    <FormHorizontal client:load />
    <Hero events={events} client:load />
    <Leaderboard client:load />
    <Testimonials client:load />
    <FooterPhotoPanel client:load />
  </main>
</Layout>

================
File: src/styles/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
}

.urbanist,
.noto {
  font-family: "Urbanist", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

/* .noto {
  font-family: "Lora", serif;
  font-optical-sizing: auto;
  font-weight: <weight>;
  font-style: normal;
} */

.morphism {
  background: rgba(14, 14, 14, 0.05);
  box-shadow: 0 8px 32px 0 rgba(175, 175, 175, 0.07);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.18);
}

.morphism-x {
  background: rgba(14, 14, 14, 0.75);
  box-shadow: 0 8px 32px 0 rgba(175, 175, 175, 0.27);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.18);
}

.chili {
  background-image: url("/chili.svg");
  background-repeat: repeat;
}

.chili-white {
  background-image: url("/chili-white.svg");
  background-repeat: repeat;
  background-size: 400px;
}

input,
textarea {
  border-radius: 8px;
  padding: 8px;
  color: #fff;
  background-color: transparent;
  border: solid 1px #fff;
}
input::placeholder,
textarea::placeholder {
  color: #fff;
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 20 14.3% 4.1%;

    --card: 0 0% 100%;
    --card-foreground: 20 14.3% 4.1%;

    --popover: 0 0% 100%;
    --popover-foreground: 20 14.3% 4.1%;

    --primary: 174.40 100.00% 29.41%;
    --primary-foreground: 60 9.1% 97.8%;

    --secondary: 60 4.8% 95.9%;
    --secondary-foreground: 24 9.8% 10%;

    --muted: 60 4.8% 95.9%;
    --muted-foreground: 25 5.3% 44.7%;

    --accent: 60 4.8% 95.9%;
    --accent-foreground: 24 9.8% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 60 9.1% 97.8%;

    --border: 20 5.9% 90%;
    --input: 20 5.9% 90%;
    --ring: 20 14.3% 4.1%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 20 14.3% 4.1%;
    --foreground: 60 9.1% 97.8%;

    --card: 20 14.3% 4.1%;
    --card-foreground: 60 9.1% 97.8%;

    --popover: 20 14.3% 4.1%;
    --popover-foreground: 60 9.1% 97.8%;

    --primary: 60 9.1% 97.8%;
    --primary-foreground: 24 9.8% 10%;

    --secondary: 12 6.5% 15.1%;
    --secondary-foreground: 60 9.1% 97.8%;

    --muted: 12 6.5% 15.1%;
    --muted-foreground: 24 5.4% 63.9%;

    --accent: 12 6.5% 15.1%;
    --accent-foreground: 60 9.1% 97.8%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 60 9.1% 97.8%;

    --border: 12 6.5% 15.1%;
    --input: 12 6.5% 15.1%;
    --ring: 24 5.7% 82.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

================
File: src/styles/topnav.module.css
================
select {
  appearance: none;
  cursor: pointer;
}

================
File: src/env.d.ts
================
/// <reference path="../.astro/types.d.ts" />
/// <reference types="astro/client" />

================
File: .gitignore
================
# build output
dist/

# generated types
.astro/

# dependencies
node_modules/

# logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# environment variables
.env
.env.production

# macOS-specific files
.DS_Store

.vscode

.netlify/

================
File: .nvmrc
================
20.10.0

================
File: .prettierrc
================
{ "plugins": ["prettier-plugin-tailwindcss"] }

================
File: astro.config.mjs
================
import { defineConfig } from "astro/config";
import tailwind from "@astrojs/tailwind";
import sitemap from "@astrojs/sitemap";
import react from "@astrojs/react";

import netlify from "@astrojs/netlify";

// https://astro.build/config
export default defineConfig({
  site: "https://tolbertrestaurant.com",
  integrations: [
    tailwind({
      applyBaseStyles: false,
    }),
    sitemap(),
    react(),
  ],
  output: "hybrid",
  adapter: netlify({
    edgeMiddleware: true,
  }),
});

================
File: components.json
================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": false,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.mjs",
    "css": "./src/styles/globals.css",
    "baseColor": "stone",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils"
  }
}

================
File: package.json
================
{
  "name": "andrew-riefenstahl-personal",
  "type": "module",
  "version": "0.0.1",
  "scripts": {
    "dev": "astro dev",
    "start": "astro dev",
    "build": "astro build",
    "preview": "astro preview",
    "astro": "astro"
  },
  "dependencies": {
    "@astrojs/netlify": "^5.2.1",
    "@astrojs/react": "^3.0.10",
    "@astrojs/sitemap": "^3.0.4",
    "@astrojs/tailwind": "^5.1.0",
    "@radix-ui/react-accordion": "^1.1.2",
    "@radix-ui/react-icons": "^1.3.0",
    "@radix-ui/react-slot": "^1.0.2",
    "@tailwindcss/typography": "^0.5.10",
    "@types/react": "^18.2.58",
    "@types/react-dom": "^18.2.19",
    "astro": "^4.2.6",
    "astro-embed": "^0.7.1",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.0",
    "embla-carousel-react": "^8.0.2",
    "lucide-react": "^0.373.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "schema-dts": "^1.1.2",
    "tailwind-merge": "^2.2.1",
    "tailwindcss": "^3.4.1",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "prettier": "^3.2.5",
    "prettier-plugin-astro": "^0.13.0",
    "prettier-plugin-tailwindcss": "^0.5.11"
  }
}

================
File: README.md
================
# Astro Starter Kit: Basics

```sh
npm create astro@latest -- --template basics
```

[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/withastro/astro/tree/latest/examples/basics)
[![Open with CodeSandbox](https://assets.codesandbox.io/github/button-edit-lime.svg)](https://codesandbox.io/p/sandbox/github/withastro/astro/tree/latest/examples/basics)
[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/withastro/astro?devcontainer_path=.devcontainer/basics/devcontainer.json)

> 🧑‍🚀 **Seasoned astronaut?** Delete this file. Have fun!

![just-the-basics](https://github.com/withastro/astro/assets/2244813/a0a5533c-a856-4198-8470-2d67b1d7c554)

## 🚀 Project Structure

Inside of your Astro project, you'll see the following folders and files:

```text
/
├── public/
│   └── favicon.svg
├── src/
│   ├── components/
│   │   └── Card.astro
│   ├── layouts/
│   │   └── Layout.astro
│   └── pages/
│       └── index.astro
└── package.json
```

Astro looks for `.astro` or `.md` files in the `src/pages/` directory. Each page is exposed as a route based on its file name.

There's nothing special about `src/components/`, but that's where we like to put any Astro/React/Vue/Svelte/Preact components.

Any static assets, like images, can be placed in the `public/` directory.

## 🧞 Commands

All commands are run from the root of the project, from a terminal:

| Command                   | Action                                           |
| :------------------------ | :----------------------------------------------- |
| `npm install`             | Installs dependencies                            |
| `npm run dev`             | Starts local dev server at `localhost:4321`      |
| `npm run build`           | Build your production site to `./dist/`          |
| `npm run preview`         | Preview your build locally, before deploying     |
| `npm run astro ...`       | Run CLI commands like `astro add`, `astro check` |
| `npm run astro -- --help` | Get help using the Astro CLI                     |

## 👀 Want to learn more?

Feel free to check [our documentation](https://docs.astro.build) or jump into our [Discord server](https://astro.build/chat).

================
File: tailwind.config.mjs
================
/** @type {import('tailwindcss').Config} */
module.exports = {
  darkMode: ["class"],
  content: ["./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}"],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  variants: {
    extend: {
      display: ["group-hover"],
    },
  },
  plugins: [require("tailwindcss-animate"), require("@tailwindcss/typography")],
};

================
File: tsconfig.json
================
{
  "extends": "astro/tsconfigs/base",
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },
    "jsx": "react-jsx",
    "jsxImportSource": "react"
  }
}
